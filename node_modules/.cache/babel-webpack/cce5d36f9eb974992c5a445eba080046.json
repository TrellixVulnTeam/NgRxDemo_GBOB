{"ast":null,"code":"import { createEffect, ofType } from \"@ngrx/effects\";\nimport { map, mergeMap } from \"rxjs/operators\";\nimport * as LoginAction from './login.action';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"@angular/common/http\";\nexport class loginEffects {\n  /**\n   *  For getting the effects first we need to inject the action in the constructor.\n   *  The second paramter will be service name here we are hardcoing the rest here only\n   */\n  constructor(action$, http) {\n    this.action$ = action$;\n    this.http = http;\n    /**\n     *  Second step is to create an effects for listening to all the async functions\n     *\n     */\n\n    this.loadEmployees$ = createEffect(() => {\n      return this.action$.pipe(ofType(LoginAction.loadEmployee), mergeMap(() => this.http.get('../model/employees.response.json').pipe(map(employees => LoginAction.loadSuccess({\n        employees\n      })))));\n    });\n  }\n\n}\n\nloginEffects.ɵfac = function loginEffects_Factory(t) {\n  return new (t || loginEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.HttpClient));\n};\n\nloginEffects.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: loginEffects,\n  factory: loginEffects.ɵfac\n});","map":{"version":3,"sources":["/Users/ankitkumar/Angular Learnings/NgRx/src/app/login/state/login.effects.ts"],"names":[],"mappings":"AAEA,SAAkB,YAAlB,EAAgC,MAAhC,QAA8C,eAA9C;AACA,SAAS,GAAT,EAAc,QAAd,QAA8B,gBAA9B;AACA,OAAO,KAAK,WAAZ,MAA6B,gBAA7B;;;;AAKA,OAAM,MAAO,YAAP,CAAmB;AAEvB;;;AAGG;AACH,EAAA,WAAA,CAAoB,OAApB,EAA8C,IAA9C,EAA8D;AAA1C,SAAA,OAAA,GAAA,OAAA;AAA0B,SAAA,IAAA,GAAA,IAAA;AAG9C;;;AAGG;;AAEH,SAAA,cAAA,GAAiB,YAAY,CAAC,MAAK;AACjC,aAAO,KAAK,OAAL,CAAa,IAAb,CACL,MAAM,CAAC,WAAW,CAAC,YAAb,CADD,EAEL,QAAQ,CAAC,MAAM,KAAK,IAAL,CAAU,GAAV,CAAqC,kCAArC,EAAyE,IAAzE,CAA8E,GAAG,CAAC,SAAS,IAAI,WAAW,CAAC,WAAZ,CAAwB;AAAC,QAAA;AAAD,OAAxB,CAAd,CAAjF,CAAP,CAFH,CAAP;AAID,KAL4B,CAA7B;AARkE;;AAN3C;;;mBAAZ,Y,EAAY,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,OAAA,C,EAAA,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,UAAA,C;AAAA,C;;;SAAZ,Y;AAAY,EAAA,OAAA,EAAZ,YAAY,CAAA","sourcesContent":["import { HttpClient } from \"@angular/common/http\";\nimport { Injectable} from \"@angular/core\";\nimport { Actions, createEffect, ofType } from \"@ngrx/effects\";\nimport { map, mergeMap } from \"rxjs/operators\";\nimport * as LoginAction from './login.action';\nimport {  } from \"../model\";\n\n\n@Injectable()\nexport class loginEffects {\n\n  /**\n   *  For getting the effects first we need to inject the action in the constructor.\n   *  The second paramter will be service name here we are hardcoing the rest here only\n   */\n  constructor(private action$: Actions, private http: HttpClient) {}\n\n\n  /**\n   *  Second step is to create an effects for listening to all the async functions\n   *\n   */\n\n  loadEmployees$ = createEffect(() => {\n    return this.action$.pipe(\n      ofType(LoginAction.loadEmployee),\n      mergeMap(() => this.http.get<LoginAction.Employees>('../model/employees.response.json').pipe(map(employees => LoginAction.loadSuccess({employees}))))\n    )\n  })\n\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}